{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Seop\\\\Documents\\\\GitHub\\\\FullStackProject-ing\\\\Frontend\\\\my-app\\\\src\\\\route\\\\Board.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport BoardList from '../BoardList';\n\nclass Board extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Boards: [],\n      updatestat: false\n    };\n\n    this.getBoardList = async () => {\n      const {\n        data: {\n          data\n        }\n      } = await axios.get(\"http://localhost:8080/board\");\n      this.setState({\n        Boards: data\n      });\n    };\n\n    this.checkLogin = () => {\n      const {\n        history\n      } = this.props;\n\n      if (window.sessionStorage.getItem('id')) {\n        history.push(\"/write\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    this.getBoardList();\n  }\n\n  componentDidUpdate() {\n    const {\n      location\n    } = this.props;\n    console.log(location); // this.setState({updatestat: location.state.updatestat});\n  }\n\n  render() {\n    const {\n      Boards\n    } = this.state;\n    return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success\",\n      onClick: this.checkLogin,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"\\uAE00\\uC4F0\\uAE30\")), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      className: \"table table-hover\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"\\uBC88\\uD638\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"\\uC81C\\uBAA9\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"\\uC791\\uC131\\uC790\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"\\uC791\\uC131\\uC77C\\uC790\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"\\uC870\\uD68C\\uC218\"))), Boards.map(function (Board) {\n      return React.createElement(BoardList, {\n        no: Board.no,\n        title: Board.title,\n        name: Board.name,\n        writedate: Board.writedate,\n        readcount: Board.readcount,\n        content: Board.content,\n        pass: Board.pass,\n        key: Board.no,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nexport default Board;","map":{"version":3,"sources":["C:/Users/Seop/Documents/GitHub/FullStackProject-ing/Frontend/my-app/src/route/Board.js"],"names":["React","axios","BoardList","Board","Component","state","Boards","updatestat","getBoardList","data","get","setState","checkLogin","history","props","window","sessionStorage","getItem","push","componentDidMount","componentDidUpdate","location","console","log","render","map","no","title","name","writedate","readcount","content","pass"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,cAAtB;;AAEA,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAEhCC,KAFgC,GAExB;AACJC,MAAAA,MAAM,EAAE,EADJ;AAEJC,MAAAA,UAAU,EAAE;AAFR,KAFwB;;AAAA,SAOhCC,YAPgC,GAOjB,YAAY;AACvB,YAAM;AACFC,QAAAA,IAAI,EAAE;AAAEA,UAAAA;AAAF;AADJ,UAEF,MAAMR,KAAK,CAACS,GAAN,CAAU,6BAAV,CAFV;AAGA,WAAKC,QAAL,CAAc;AAAEL,QAAAA,MAAM,EAAEG;AAAV,OAAd;AACH,KAZ+B;;AAAA,SAwBhCG,UAxBgC,GAwBnB,MAAK;AACd,YAAM;AAACC,QAAAA;AAAD,UAAY,KAAKC,KAAvB;;AACA,UAAGC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,CAA8B,IAA9B,CAAH,EAAuC;AACpCJ,QAAAA,OAAO,CAACK,IAAR,CAAa,QAAb;AACF;AACJ,KA7B+B;AAAA;;AAchCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,YAAL;AACH;;AAEDY,EAAAA,kBAAkB,GAAG;AACjB,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKP,KAAxB;AACAQ,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ,EAFiB,CAGjB;AACH;;AASDG,EAAAA,MAAM,GAAG;AACL,UAAM;AAAElB,MAAAA;AAAF,QAAa,KAAKD,KAAxB;AACA,WACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,iBAAhC;AAAkD,MAAA,OAAO,EAAE,KAAKO,UAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,SAAS,EAAC,mBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,CADJ,CADJ,EAUKN,MAAM,CAACmB,GAAP,CAAW,UAAUtB,KAAV,EAAiB;AACzB,aAAO,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAEA,KAAK,CAACuB,EAArB;AAAyB,QAAA,KAAK,EAAEvB,KAAK,CAACwB,KAAtC;AAA6C,QAAA,IAAI,EAAExB,KAAK,CAACyB,IAAzD;AAA+D,QAAA,SAAS,EAAEzB,KAAK,CAAC0B,SAAhF;AAA2F,QAAA,SAAS,EAAE1B,KAAK,CAAC2B,SAA5G;AAAuH,QAAA,OAAO,EAAE3B,KAAK,CAAC4B,OAAtI;AAA+I,QAAA,IAAI,EAAE5B,KAAK,CAAC6B,IAA3J;AAAiK,QAAA,GAAG,EAAE7B,KAAK,CAACuB,EAA5K;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CAVL,CADJ,CAJJ,CADJ;AAyBH;;AA1D+B;;AA6DpC,eAAevB,KAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport BoardList from '../BoardList';\r\n\r\nclass Board extends React.Component {\r\n\r\n    state = {\r\n        Boards: [],\r\n        updatestat: false\r\n    }\r\n\r\n    getBoardList = async () => {\r\n        const {\r\n            data: { data }\r\n        } = await axios.get(\"http://localhost:8080/board\");\r\n        this.setState({ Boards: data });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getBoardList();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const {location} = this.props;\r\n        console.log(location);\r\n        // this.setState({updatestat: location.state.updatestat});\r\n    }\r\n\r\n    checkLogin = () =>{\r\n        const {history} = this.props;\r\n        if(window.sessionStorage.getItem('id')){\r\n           history.push(\"/write\"); \r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { Boards } = this.state;\r\n        return (\r\n            <>\r\n                <div>\r\n                    <button type=\"button\" className=\"btn btn-success\" onClick={this.checkLogin}>글쓰기</button>\r\n                </div>\r\n                <div>\r\n                    <table className=\"table table-hover\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>번호</th>\r\n                                <th>제목</th>\r\n                                <th>작성자</th>\r\n                                <th>작성일자</th>\r\n                                <th>조회수</th>\r\n                            </tr>\r\n                        </thead>\r\n                        {Boards.map(function (Board) {\r\n                            return <BoardList no={Board.no} title={Board.title} name={Board.name} writedate={Board.writedate} readcount={Board.readcount} content={Board.content} pass={Board.pass} key={Board.no}/>\r\n                        })}\r\n\r\n                    </table>\r\n                </div>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default Board;"]},"metadata":{},"sourceType":"module"}