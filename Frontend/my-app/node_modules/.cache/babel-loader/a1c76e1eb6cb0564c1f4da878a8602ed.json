{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Seop\\\\example\\\\my-app\\\\src\\\\route\\\\Signup.js\";\nimport React from 'react';\nimport crypto from 'crypto';\nimport axios from 'axios';\n\nclass Signup extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      idlist: []\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.check_pass = () => {\n      const {\n        pass,\n        pass_check\n      } = this.state;\n\n      if (pass === pass_check) {\n        return true;\n      } else {\n        alert(\"패스워드가 일치하지않습니다.\");\n        return false;\n      }\n    };\n\n    this.signup = e => {\n      e.preventDefault();\n      const {\n        history\n      } = this.props;\n\n      if (this.check_pass()) {\n        var {\n          pass\n        } = this.state;\n      } else {\n        return;\n      }\n\n      crypto.randomBytes(64, (err, buf) => {\n        crypto.pbkdf2({\n          pass\n        }.toString(), buf.toString('base64').toString(), 100000, 64, 'sha512', async (err, key) => {\n          await axios.post(`http://localhost:8080/signup`, {\n            mid: this.state.id.toString(),\n            mpass: key.toString('base64'),\n            mpass_check: key.toString('base64'),\n            mname: this.state.name.toString(),\n            salt: buf.toString('base64')\n          }).then(history.push(\"/\"));\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      method: \"post\",\n      onSubmit: this.signup,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"table\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"id\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"ID\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"id\",\n      id: \"id\",\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"pass\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"PassWord\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"pass\",\n      id: \"pass\",\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"pass_check\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"PassWord Check\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"pass_check\",\n      id: \"pass_check\",\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      className: \"form-control\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }))), React.createElement(\"tr\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      className: \"col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\uD68C\\uC6D0\\uAC00\\uC785\",\n      className: \"btn bg-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/Seop/example/my-app/src/route/Signup.js"],"names":["React","crypto","axios","Signup","Component","state","idlist","handleChange","e","setState","target","name","value","check_pass","pass","pass_check","alert","signup","preventDefault","history","props","randomBytes","err","buf","pbkdf2","toString","key","post","mid","id","mpass","mpass_check","mname","salt","then","push","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport crypto from 'crypto';\r\nimport axios from 'axios';\r\n\r\nclass Signup extends React.Component {\r\n    state = {\r\n        idlist: []\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    }\r\n\r\n    check_pass = () => {\r\n        const { pass, pass_check } = this.state;\r\n        if (pass === pass_check) {\r\n            return true;\r\n        } else {\r\n            alert(\"패스워드가 일치하지않습니다.\");\r\n            return false;\r\n        }\r\n    }\r\n\r\n    signup = (e) => {\r\n        e.preventDefault();\r\n        const {history} = this.props;\r\n        if (this.check_pass()) {\r\n            var { pass } = this.state;\r\n        }else{\r\n            return ;\r\n        }\r\n        crypto.randomBytes(64, (err, buf) => {\r\n            crypto.pbkdf2({ pass }.toString(), buf.toString('base64').toString(), 100000, 64, 'sha512', async (err, key) => {\r\n                await axios.post(`http://localhost:8080/signup`,{\r\n                    mid: this.state.id.toString(),\r\n                    mpass: key.toString('base64'),\r\n                    mpass_check: key.toString('base64'),\r\n                    mname: this.state.name.toString(),\r\n                    salt: buf.toString('base64')\r\n                }).then(history.push(\"/\"));\r\n            });\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <form method=\"post\" onSubmit={this.signup}>\r\n                <table>\r\n                    <tbody>\r\n                        <tr className=\"row\">\r\n                            <td className=\"col\"><label htmlFor=\"id\">ID</label><input type=\"text\" name=\"id\" id=\"id\" className=\"form-control\" onChange={this.handleChange} /></td>\r\n                        </tr>\r\n                        <tr className=\"row\">\r\n                            <td className=\"col\"><label htmlFor=\"pass\">PassWord</label><input type=\"password\" name=\"pass\" id=\"pass\" className=\"form-control\" onChange={this.handleChange} /></td>\r\n                        </tr>\r\n                        <tr className=\"row\">\r\n                            <td className=\"col\"><label htmlFor=\"pass_check\">PassWord Check</label><input type=\"password\" name=\"pass_check\" id=\"pass_check\" className=\"form-control\" onChange={this.handleChange} /></td>\r\n                        </tr>\r\n                        <tr className=\"row\">\r\n                            <td className=\"col\"><label htmlFor=\"name\">Name</label><input type=\"text\" name=\"name\" id=\"name\" className=\"form-control\" onChange={this.handleChange} /></td>\r\n                        </tr>\r\n                        <tr className=\"row\">\r\n                            <td className=\"col\"><input type=\"submit\" value=\"회원가입\" className=\"btn bg-success\" /></td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Signup;"]},"metadata":{},"sourceType":"module"}